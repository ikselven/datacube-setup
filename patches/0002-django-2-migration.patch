diff --git a/.gitignore b/.gitignore
index 2a977a0..182a7b4 100644
--- a/.gitignore
+++ b/.gitignore
@@ -3,3 +3,4 @@ apps/*/__pycache__/
 */__pycache__/
 data_cube_ui/migrations/
 data_cube_ui/__pycache__/
+.idea
diff --git a/apps/accounts/views.py b/apps/accounts/views.py
index 0080c0a..abb6e09 100755
--- a/apps/accounts/views.py
+++ b/apps/accounts/views.py
@@ -281,7 +281,7 @@ def registration(request):
         context = {'title': _("Registration"), 'form': RegistrationForm(),}
         if request.GET:
             next = request.POST.get('next', "/")
-            if request.user.is_authenticated():
+            if request.user.is_authenticated:
                 return redirect(next)
             context['next'] = next
         return render(request, 'registration/registration.html', context)
@@ -337,7 +337,7 @@ def login(request):
         context = {'title': _("Log in"), 'form': LoginForm() }
         if request.GET:
             next = request.GET.get('next', "/")
-            if request.user.is_authenticated():
+            if request.user.is_authenticated:
                 return redirect(next)
             context['next'] = next
         return render(request, 'registration/login.html', context)
diff --git a/apps/coastal_change/models.py b/apps/coastal_change/models.py
index 7d39ac5..af8a3de 100755
--- a/apps/coastal_change/models.py
+++ b/apps/coastal_change/models.py
@@ -74,7 +74,7 @@ class Query(BaseQuery):
     time_end = models.IntegerField()
     time_start = models.IntegerField()
 
-    animated_product = models.ForeignKey(AnimationType)
+    animated_product = models.ForeignKey(AnimationType, on_delete=models.CASCADE)
 
     base_result_dir = os.path.join(settings.RESULTS_DATA_DIR, 'coastal_change')
 
diff --git a/apps/custom_mosaic_tool/models.py b/apps/custom_mosaic_tool/models.py
index bb07b8e..d67b625 100755
--- a/apps/custom_mosaic_tool/models.py
+++ b/apps/custom_mosaic_tool/models.py
@@ -81,9 +81,9 @@ class Query(BaseQuery):
     foreign keys should define __str__ for a human readable name.
 
     """
-    query_type = models.ForeignKey(ResultType)
-    animated_product = models.ForeignKey(AnimationType)
-    compositor = models.ForeignKey(Compositor)
+    query_type = models.ForeignKey(ResultType, on_delete=models.CASCADE)
+    animated_product = models.ForeignKey(AnimationType, on_delete=models.CASCADE)
+    compositor = models.ForeignKey(Compositor, on_delete=models.CASCADE)
 
     base_result_dir = os.path.join(settings.RESULTS_DATA_DIR, 'custom_mosaic_tool')
 
diff --git a/apps/dc_algorithm/management/commands/band_math_app/models.py b/apps/dc_algorithm/management/commands/band_math_app/models.py
index 7c7fd34..2cc9c72 100644
--- a/apps/dc_algorithm/management/commands/band_math_app/models.py
+++ b/apps/dc_algorithm/management/commands/band_math_app/models.py
@@ -60,7 +60,7 @@ class Query(BaseQuery):
     foreign keys should define __str__ for a human readable name.
 
     """
-    compositor = models.ForeignKey(Compositor)
+    compositor = models.ForeignKey(Compositor, on_delete=models.CASCADE)
 
     #TODO: add color scale here
     color_scale_path = os.path.join(settings.BASE_DIR, 'utils/color_scales/default_color_scale')
diff --git a/apps/dc_algorithm/management/commands/base_app/models.py b/apps/dc_algorithm/management/commands/base_app/models.py
index 8ff58cc..dc2fba7 100644
--- a/apps/dc_algorithm/management/commands/base_app/models.py
+++ b/apps/dc_algorithm/management/commands/base_app/models.py
@@ -89,9 +89,9 @@ class Query(BaseQuery):
     """
 
     # TODO: Are there querytypes, animation types, or compositors that need to be distinguished?
-    query_type = models.ForeignKey(ResultType)
-    animated_product = models.ForeignKey(AnimationType)
-    compositor = models.ForeignKey(Compositor)
+    query_type = models.ForeignKey(ResultType, on_delete=models.CASCADE)
+    animated_product = models.ForeignKey(AnimationType, on_delete=models.CASCADE)
+    compositor = models.ForeignKey(Compositor, on_delete=models.CASCADE)
 
     # TODO: Fill out the configuration paths
     base_result_dir = os.path.join(settings.RESULTS_DATA_DIR, 'app_name')
diff --git a/apps/dc_algorithm/models/abstract_base_models.py b/apps/dc_algorithm/models/abstract_base_models.py
index 22ef8df..2c10edd 100644
--- a/apps/dc_algorithm/models/abstract_base_models.py
+++ b/apps/dc_algorithm/models/abstract_base_models.py
@@ -65,7 +65,7 @@ class Query(models.Model):
 
     area_id = models.CharField(max_length=100)
 
-    satellite = models.ForeignKey('dc_algorithm.Satellite')
+    satellite = models.ForeignKey('dc_algorithm.Satellite', on_delete=models.CASCADE)
 
     time_start = models.DateField('time_start')
     time_end = models.DateField('time_end')
diff --git a/apps/dc_algorithm/models/application_models.py b/apps/dc_algorithm/models/application_models.py
index b3f9025..73af008 100644
--- a/apps/dc_algorithm/models/application_models.py
+++ b/apps/dc_algorithm/models/application_models.py
@@ -207,7 +207,7 @@ class Application(models.Model):
 
     color_scale = models.CharField(max_length=250, default="", blank=True, null=True)
 
-    application_group = models.ForeignKey('ApplicationGroup', null=True, blank=True)
+    application_group = models.ForeignKey('ApplicationGroup', on_delete=models.CASCADE, null=True, blank=True)
 
     def __str__(self):
         return self.id
diff --git a/apps/fractional_cover/models.py b/apps/fractional_cover/models.py
index 64b2a23..c1a740d 100755
--- a/apps/fractional_cover/models.py
+++ b/apps/fractional_cover/models.py
@@ -60,7 +60,7 @@ class Query(BaseQuery):
     foreign keys should define __str__ for a human readable name.
 
     """
-    compositor = models.ForeignKey(Compositor)
+    compositor = models.ForeignKey(Compositor, on_delete=models.CASCADE)
 
     base_result_dir = os.path.join(settings.RESULTS_DATA_DIR, 'fractional_cover')
 
diff --git a/apps/slip/models.py b/apps/slip/models.py
index b640c60..3a9be19 100755
--- a/apps/slip/models.py
+++ b/apps/slip/models.py
@@ -73,7 +73,7 @@ class Query(BaseQuery):
 
     """
 
-    baseline_method = models.ForeignKey(BaselineMethod)
+    baseline_method = models.ForeignKey(BaselineMethod, on_delete=models.CASCADE)
     baseline_length = models.IntegerField(default=10)
 
     base_result_dir = os.path.join(settings.RESULTS_DATA_DIR, 'slip')
diff --git a/apps/spectral_indices/models.py b/apps/spectral_indices/models.py
index c8b3eac..8a1781f 100644
--- a/apps/spectral_indices/models.py
+++ b/apps/spectral_indices/models.py
@@ -68,8 +68,8 @@ class Query(BaseQuery):
     foreign keys should define __str__ for a human readable name.
 
     """
-    compositor = models.ForeignKey(Compositor)
-    query_type = models.ForeignKey(ResultType)
+    compositor = models.ForeignKey(Compositor, on_delete=models.CASCADE)
+    query_type = models.ForeignKey(ResultType, on_delete=models.CASCADE)
 
     color_scale_path = {
         'ndvi': os.path.join(settings.BASE_DIR, 'utils/color_scales/ndvi'),
diff --git a/apps/tsm/models.py b/apps/tsm/models.py
index 7eef74e..1dd8db1 100755
--- a/apps/tsm/models.py
+++ b/apps/tsm/models.py
@@ -78,8 +78,8 @@ class Query(BaseQuery):
 
     """
 
-    query_type = models.ForeignKey(ResultType)
-    animated_product = models.ForeignKey(AnimationType)
+    query_type = models.ForeignKey(ResultType, on_delete=models.CASCADE)
+    animated_product = models.ForeignKey(AnimationType, on_delete=models.CASCADE)
 
     base_result_dir = os.path.join(settings.RESULTS_DATA_DIR, 'tsm')
 
diff --git a/apps/urbanization/models.py b/apps/urbanization/models.py
index 687ea9d..6e671b2 100644
--- a/apps/urbanization/models.py
+++ b/apps/urbanization/models.py
@@ -60,7 +60,7 @@ class Query(BaseQuery):
     foreign keys should define __str__ for a human readable name.
 
     """
-    compositor = models.ForeignKey(Compositor)
+    compositor = models.ForeignKey(Compositor, on_delete=models.CASCADE)
 
     base_result_dir = os.path.join(settings.RESULTS_DATA_DIR, 'urbanization')
 
diff --git a/apps/water_detection/models.py b/apps/water_detection/models.py
index 150ca08..a28bb36 100755
--- a/apps/water_detection/models.py
+++ b/apps/water_detection/models.py
@@ -77,8 +77,8 @@ class Query(BaseQuery):
 
     """
 
-    query_type = models.ForeignKey(ResultType)
-    animated_product = models.ForeignKey(AnimationType)
+    query_type = models.ForeignKey(ResultType, on_delete=models.CASCADE)
+    animated_product = models.ForeignKey(AnimationType, on_delete=models.CASCADE)
 
     base_result_dir = os.path.join(settings.RESULTS_DATA_DIR, 'water_detection')
     color_scales = {
diff --git a/data_cube_ui/settings.py b/data_cube_ui/settings.py
index 43b2185..8effde3 100755
--- a/data_cube_ui/settings.py
+++ b/data_cube_ui/settings.py
@@ -85,13 +85,12 @@ INSTALLED_APPS = [
     'bootstrap3',
 ]
 
-MIDDLEWARE_CLASSES = [
+MIDDLEWARE = [
     'django.middleware.security.SecurityMiddleware',
     'django.contrib.sessions.middleware.SessionMiddleware',
     'django.middleware.common.CommonMiddleware',
     'django.middleware.csrf.CsrfViewMiddleware',
     'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
     'django.contrib.messages.middleware.MessageMiddleware',
     'django.middleware.clickjacking.XFrameOptionsMiddleware',
 ]
